/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Van;

import BTL.Connect;
import java.io.File;
import java.io.FileOutputStream;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author Dell V
 */
public class dieutri extends javax.swing.JFrame {

    /**
     * Creates new form dieutri
     */
    public dieutri() {
        initComponents();
          loadbenhnhan();
//        LoadKhoa();
//        LoadPhongbenh();
        load_disable();
        
    }
    Connection con;
    private void load_disable(){
        txtmabn.setEnabled(false);
//        txttenbn.setEnabled(false);
        cbmaphong.setEnabled(false);
        cbkhoa.setEnabled(false);
        dcndt.setEnabled(false);
        btluu.setEnabled(false);
        
    }
    private void load_enable(){
        txtmabn.setEnabled(true);
//        txttenbn.setEnabled(true);
        cbmaphong.setEnabled(true);
        cbkhoa.setEnabled(true);
        dcndt.setEnabled(true);
        btluu.setEnabled(true);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private static CellStyle DinhdangHeader(XSSFSheet sheet) {
        // Create font
        Font font = sheet.getWorkbook().createFont();
        font.setFontName("Times New Roman");
        font.setBold(true);
        font.setFontHeightInPoints((short) 12); // font size
        font.setColor(IndexedColors.WHITE.getIndex()); // text color

        // Create CellStyle
        CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
        cellStyle.setFont(font);
        cellStyle.setAlignment(HorizontalAlignment.CENTER);
        cellStyle.setVerticalAlignment(VerticalAlignment.TOP);
        cellStyle.setFillForegroundColor(IndexedColors.DARK_GREEN.getIndex());
        cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        cellStyle.setBorderBottom(BorderStyle.THIN);
        cellStyle.setWrapText(true);
        return cellStyle;
    }
    public void xoatrang(){
            txtmabc.setText("");
            txtmabn.setText("");
            dcndt.setDate(null);
            cbmaphong.setSelectedIndex(0);
            cbkhoa.setSelectedIndex(0);
    }
    private void loadbenhnhan() {
        try{
        tbdieutri.removeAll();
            //B1: Kết nối đến DB
            Connection con= BTL.Connect.KetnoiDB();
            //B2: Tạo đối tượng Statement để thực hiện câu lệnh truy cập
            String sql = "Select * From BaoCaoBenhNhanDangDieuTri";
            Statement st=con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            String[] tieude={"Mã Báo Cáo", "Mã Bệnh Nhân","Mã Phòng","Mã Khoa","Ngày điều trị"};
            DefaultTableModel tb=new DefaultTableModel(tieude,0)    {           
                    @Override
                    public boolean isCellEditable(int row, int column) {
                        // Tất cả các ô sẽ không thể chỉnh sửa
                        return false;
                    }
                    };
            
            while(rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("MaBaoCao"));
                v.add(rs.getString("MaBenhNhan"));
                v.add(rs.getString("MaPhong"));
                v.add(rs.getString("MaKhoa"));
                v.add(rs.getString("NgayDieuTri"));
                tb.addRow(v);
            }
            tbdieutri.setModel(tb);
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tkmbc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tkmbn = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbdieutri = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtmabc = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbkhoa = new javax.swing.JComboBox<>();
        cbmaphong = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtmabn = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        dcndt = new com.toedter.calendar.JDateChooser();
        jPanel5 = new javax.swing.JPanel();
        btluu = new javax.swing.JButton();
        btcapnhat = new javax.swing.JButton();
        btxoa = new javax.swing.JButton();
        btxuatexcel = new javax.swing.JButton();
        btthoat = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Quản Lý Bệnh Nhân Đang Điều Trị");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin tìm kiếm"));
        jPanel3.setForeground(new java.awt.Color(0, 204, 255));

        jLabel2.setText("Tìm kiếm theo mã báo cáo:");

        tkmbc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tkmbcMouseClicked(evt);
            }
        });
        tkmbc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tkmbcActionPerformed(evt);
            }
        });
        tkmbc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tkmbcKeyReleased(evt);
            }
        });

        jLabel3.setText("Tìm kiếm theo mã bệnh nhân:");

        tkmbn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tkmbnMouseClicked(evt);
            }
        });
        tkmbn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tkmbnKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addComponent(tkmbc, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(jLabel3)
                .addGap(40, 40, 40)
                .addComponent(tkmbn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tkmbc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(tkmbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin chi tiết"));

        tbdieutri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Báo Cáo", "Mã Bệnh Nhân", "Mã Phòng", "Mã Khoa", "Ngày Điều Trị"
            }
        ));
        tbdieutri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbdieutriMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbdieutri);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(329, 329, 329)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Thêm thông tin"));

        jLabel5.setText("Mã báo cáo:");

        jLabel6.setText("Mã phòng:");

        jLabel8.setText("Khoa điều trị: ");

        cbkhoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn mã khoa--", " " }));

        cbmaphong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn mã phòng--", " " }));

        jLabel10.setText("Mã bệnh nhân:");

        jLabel11.setText("Ngày điều trị:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel10)
                    .addComponent(jLabel6))
                .addGap(46, 46, 46)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbmaphong, 0, 260, Short.MAX_VALUE)
                            .addComponent(txtmabc))
                        .addGap(121, 121, 121)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel11)))
                    .addComponent(txtmabn, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbkhoa, 0, 205, Short.MAX_VALUE)
                    .addComponent(dcndt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(70, 70, 70))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtmabc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(cbkhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbmaphong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtmabn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(dcndt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(53, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(52, 52, 52))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btluu.setText("Lưu");
        btluu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btluuActionPerformed(evt);
            }
        });

        btcapnhat.setText("Cập nhật");
        btcapnhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btcapnhatActionPerformed(evt);
            }
        });

        btxoa.setText("Xóa");
        btxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btxoaActionPerformed(evt);
            }
        });

        btxuatexcel.setText("Xuất Excel");
        btxuatexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btxuatexcelActionPerformed(evt);
            }
        });

        btthoat.setText("Thoát");
        btthoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btthoatActionPerformed(evt);
            }
        });

        jButton3.setText("Load");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(btluu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btcapnhat)
                .addGap(18, 18, 18)
                .addComponent(btxoa)
                .addGap(18, 18, 18)
                .addComponent(btxuatexcel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btthoat)
                .addGap(24, 24, 24))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btluu)
                    .addComponent(btcapnhat)
                    .addComponent(btxoa)
                    .addComponent(btxuatexcel)
                    .addComponent(jButton3)
                    .addComponent(btthoat))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btluuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btluuActionPerformed
        String mbc = txtmabc.getText().trim();
        String mbn = txtmabn.getText().trim();
        String ph = cbmaphong.getSelectedItem().toString();
        String kh = cbkhoa.getSelectedItem().toString();
        SimpleDateFormat fomat = new SimpleDateFormat("yyyy-MM-dd");
        java.sql.Date ndt = new java.sql.Date(dcndt.getDate().getTime());       
       

        // B1.1: Kiểm tra các trường bắt buộc phải nhập
        if (mbc.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã báo cáo không được để trống.");
            txtmabc.requestFocus();
            return;
        }

        if (mbn.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã bệnh nhân không được để trống.");
            txtmabn.requestFocus();
            return;
        }

        if (ndt == null) {
            JOptionPane.showMessageDialog(this, "Ngày điều trị không được để trống.");
            dcndt.requestFocus();
            return;
        }

        if(mbn.equals("Chọn Mã Phòng!")){
                ph="";
            }
        if (mbn.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã phòng điều trị không được để trống.");
            cbmaphong.requestFocus();
            return;
        }

        if(mbn.equals("Chọn Mã Khoa!")){
                kh="";
            }
        if (mbn.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã khoa điều trị không được để trống.");
            cbkhoa.requestFocus();
            return;
        }

        

        //B2: Kết nối Database
        try {
            con = BTL.Connect.KetnoiDB();  

            //B3: Tạo đối tượng Statement để thực hiện lệnh truy vấn 
            String sql = "Insert INTO BaoCaoBenhNhanDangDieuTri values('"+ mbc +"','"+ mbn +"', '"+ ph +"', '"+ kh +"', N'"+ ndt +"')";
            Statement st = con.createStatement();
            st.executeUpdate(sql);
            con.close();
            loadbenhnhan();
            JOptionPane.showMessageDialog(this, "Thêm mới thành công");    
            xoatrang();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm dữ liệu: " + e.getMessage());
        }
    }//GEN-LAST:event_btluuActionPerformed

    private void btcapnhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btcapnhatActionPerformed
        try {
        String ph = cbmaphong.getSelectedItem().toString();  // mã phòng điều trị
        String kh = cbkhoa.getSelectedItem().toString();  // mã khoa điều trị


        // Kiểm tra nếu các trường không được để trống
        if (ph.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được để trống phòng điều trị");
            return;
        }
        if (kh.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được để trống khoa điều trị");
            return;
        }

        // Lấy ngày điều trị từ DateChooser
        java.sql.Date ndt = new java.sql.Date (dcndt.getDate().getTime());
        if (ndt == null) {
            JOptionPane.showMessageDialog(this, "Không được để trống ngày điều trị");
            return;
        }

        // Định dạng ngày điều trị thành kiểu chuỗi
        java.sql.Date sqlDate = new java.sql.Date(ndt.getTime());

        // Lấy mã điều trị và mã bệnh nhân (giả sử bạn có trường txtmdt và txtmbn để nhập mã)
        String mbc = txtmabc.getText();  // Mã báo cáo
        String mbn = txtmabn.getText();  // Mã bệnh nhân

        // Kiểm tra mã điều trị không được trống
        if (mbc.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được để trống mã báo cáo");
            return;
        }

        con = Connect.KetnoiDB();  // Kết nối tới database

        // Câu lệnh SQL để cập nhật bản ghi trong bảng QuaTrinhDieuTri
        String sql = "UPDATE BaoCaoBenhNhanDangDieuTri SET "
                   + "MaPhong = ?, "
                   + "MaKhoa = ?, "
                   + "NgayDieuTri = ?"
                   + "WHERE MaBaoCao = ? AND MaBenhNhan = ?";

        // Sử dụng PreparedStatement để tránh SQL Injection
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setDate(1, sqlDate);  // Gán ngày điều trị
        ps.setString(2, ph);     // Gán phòng điều trị
        ps.setString(3, kh);     // Gán khoa điều trị
//        ps.setString(4, bs);     // Gán bác sĩ điều trị
        ps.setString(4, mbc);    // Gán mã báo cáo
        ps.setString(5, mbn);    // Gán mã bệnh nhân

        // Thực hiện câu lệnh cập nhật
        int rowsAffected = ps.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Sửa thành công");
            loadbenhnhan();  // Tải lại dữ liệu sau khi cập nhật
            xoatrang();  
        } else {
            JOptionPane.showMessageDialog(this, "Không tìm thấy dữ liệu để sửa");
        }
      
        con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Sửa không thành công");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btcapnhatActionPerformed

    private void btxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btxoaActionPerformed
        String mbc = txtmabc.getText();
    try {
        con = Connect.KetnoiDB();
        String sql = "DELETE FROM BaoCaoBenhNhanDangDieuTri WHERE MaBaoCao = ?";
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setString(1, mbc);

        int response = JOptionPane.showConfirmDialog(null, 
            "Bạn có muốn xóa?", 
            "Xác nhận", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.QUESTION_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
            int rowsAffected = ps.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Xóa thành công");
            } else {
                JOptionPane.showMessageDialog(this, "Không có dữ liệu để xóa");
            }
        }

        con.close();
        loadbenhnhan();  // reload the table to reflect changes
        // Clear the input fields
        txtmabc.setText("");
        txtmabn.setText("");
        dcndt.setDate(null);
        cbmaphong.setSelectedItem(null); //xóa lựa chọn hiện tại, không chọn gì
        cbkhoa.setSelectedItem(null);
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_btxoaActionPerformed

    private void btxuatexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btxuatexcelActionPerformed
        // TODO add your handling code here:
       try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet spreadsheet = workbook.createSheet("Khoa");
            // register the columns you wish to track and compute the column width

            CreationHelper createHelper = workbook.getCreationHelper();

            XSSFRow row = null;
            Cell cell = null;

            row = spreadsheet.createRow((short) 2);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("DANH SÁCH BỆNH NHÂN ĐANG ĐIỀU TRỊ");

            //Tạo dòng tiêu đều của bảng
            // create CellStyle Họ và tên", "Mã bệnh nhân","Ngày sinh","Giới tính","Địa chỉ","Số điện thoại
            CellStyle cellStyle_Head = DinhdangHeader(spreadsheet);
            row = spreadsheet.createRow((short) 3);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Mã báo cáo");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Mã bệnh nhân");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Mã Phòng");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Mã Khoa");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Ngày điều trị");
            //Kết nối DB
            con = BTL.Connect.KetnoiDB();
            String sql = "Select * From BaoCaoBenhNhanDangDieuTri";
            PreparedStatement st = con.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            //Đổ dữ liệu từ rs vào các ô trong excel
            ResultSetMetaData rsmd = rs.getMetaData();
            int tongsocot = rsmd.getColumnCount();

            //Đinh dạng Tạo đường kẻ cho ô chứa dữ liệu
            CellStyle cellStyle_data = spreadsheet.getWorkbook().createCellStyle();
            cellStyle_data.setBorderLeft(BorderStyle.THIN);
            cellStyle_data.setBorderRight(BorderStyle.THIN);
            cellStyle_data.setBorderBottom(BorderStyle.THIN);

            int i = 0;
            while (rs.next()) {
                row = spreadsheet.createRow((short) 4 + i);
                row.setHeight((short) 400);

                cell = row.createCell(0);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(i + 1);

                cell = row.createCell(1);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(rs.getString("MaBaoCao"));

                cell = row.createCell(2);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(rs.getString("MaBenhNhan"));

                cell = row.createCell(3);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(rs.getString("MaPhong"));

                cell = row.createCell(4);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(rs.getString("MaKhoa"));

                cell = row.createCell(5);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(rs.getString("NgayDieuTri"));

                i++;
            }
            //Hiệu chỉnh độ rộng của cột
            for (int col = 0; col < tongsocot; col++) {
                spreadsheet.autoSizeColumn(col);
            }

            File f = new File("C:\\Users\\dqduc\\OneDrive\\Documents\\Java\\hosobenhnhan\\src\\main\\java\\QLBN\\DanhsachHoSoNhapVien.xlsx");
            FileOutputStream out = new FileOutputStream(f);
            workbook.write(out);
            out.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btxuatexcelActionPerformed

    private void btthoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btthoatActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btthoatActionPerformed

    private void tbdieutriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbdieutriMouseClicked
        // TODO add your handling code here:
        int i=tbdieutri.getSelectedRow();
        DefaultTableModel tb=(DefaultTableModel)tbdieutri.getModel();
        txtmabc.setText(tb.getValueAt(i, 0).toString());
        txtmabn.setText(tb.getValueAt(i, 1).toString());
        String ngay=tb.getValueAt(i, 4).toString();
        cbmaphong.setSelectedItem(tb.getValueAt(i, 3).toString());
        cbkhoa.setSelectedItem(tb.getValueAt(i, 4).toString());
//        txtbs.setText(tb.getValueAt(i, 5).toString());
        txtmabc.setEnabled(false);
        java.util.Date ngs;
        try {
            ngs = new SimpleDateFormat("yyyy-MM-dd").parse(ngay);
            dcndt.setDate(ngs);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_tbdieutriMouseClicked

    private void tkmbcKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tkmbcKeyReleased
        // TODO add your handling code here:
        try {
           // Lấy mã bệnh nhân từ trường nhập liệu
           tbdieutri.removeAll();
           String mbc = tkmbc.getText().trim();  // Mã báo cáo

           // Kết nối đến cơ sở dữ liệu
           con = BTL.Connect.KetnoiDB(); //dm chó tuấn
           Statement st = con.createStatement();

           // Xây dựng câu lệnh SQL cho tìm kiếm
           String sql = "SELECT * FROM BaoCaoBenhNhanDangDieuTri WHERE MaBaoCao LIKE '%" + mbc + "%'";

           // Thực hiện truy vấn
           ResultSet rs = st.executeQuery(sql);
           String[] tieude = {"Mã Báo Cáo", "Mã Bệnh Nhân","Mã Phòng","Mã Khoa", "Ngày điều trị"};
           DefaultTableModel tb = new DefaultTableModel(tieude, 0);
           tb.setRowCount(0);

           // Duyệt qua kết quả và thêm vào bảng
           while (rs.next()) {
               Vector<String> v = new Vector<>();
               v.add(rs.getString("MaBaoCao"));          // Mã báo cáo
               v.add(rs.getString("MaBenhNhan"));         // Mã bệnh nhân
               v.add(rs.getString("MaPhong"));        // mã phòng
               v.add(rs.getString("MaKhoa"));    // mã khoa
               v.add(rs.getString("NgayDieuTri"));      //ngày điều trị
               tb.addRow(v);
           }

           // Cập nhật bảng hiển thị
           tbdieutri.setModel(tb);
           con.close();  // Đóng kết nối
       } catch (Exception e) {
           e.printStackTrace();
           JOptionPane.showMessageDialog(this, "Tìm kiếm không thành công");
       }
    }//GEN-LAST:event_tkmbcKeyReleased

    private void tkmbcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tkmbcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tkmbcActionPerformed

    private void tkmbnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tkmbnKeyReleased
        // TODO add your handling code here:
        try {
           // Lấy mã bệnh nhân từ trường nhập liệu
           tbdieutri.removeAll();
           String mbn = tkmbn.getText().trim();  // Mã bệnh nhân

           // Kết nối đến cơ sở dữ liệu
           con = BTL.Connect.KetnoiDB(); //dm chó tuấn
           Statement st = con.createStatement();

           // Xây dựng câu lệnh SQL cho tìm kiếm
           String sql = "SELECT * FROM BaoCaoBenhNhanDangDieuTri WHERE MaBenhNhan LIKE '%" + mbn + "%'";

           // Thực hiện truy vấn
           ResultSet rs = st.executeQuery(sql);
           String[] tieude = {"Mã Báo Cáo", "Mã Bệnh Nhân","Mã Phòng","Mã Khoa", "Ngày điều trị"};
           DefaultTableModel tb = new DefaultTableModel(tieude, 0);
           tb.setRowCount(0);

           // Duyệt qua kết quả và thêm vào bảng
           while (rs.next()) {
               Vector<String> v = new Vector<>();
               v.add(rs.getString("MaBaoCao"));          // Mã báo cáo
               v.add(rs.getString("MaBenhNhan"));         // Mã bệnh nhân
               v.add(rs.getString("MaPhong"));        // mã phòng
               v.add(rs.getString("MaKhoa"));    // mã khoa
               v.add(rs.getString("NgayDieuTri"));      //ngày điều trị
               tb.addRow(v);
           }

           // Cập nhật bảng hiển thị
           tbdieutri.setModel(tb);
           con.close();  // Đóng kết nối
       } catch (Exception e) {
           e.printStackTrace();
           JOptionPane.showMessageDialog(this, "Tìm kiếm không thành công");
       }
    }//GEN-LAST:event_tkmbnKeyReleased

    private void tkmbcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tkmbcMouseClicked
        // TODO add your handling code here:
        xoatrang();
    }//GEN-LAST:event_tkmbcMouseClicked

    private void tkmbnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tkmbnMouseClicked
        // TODO add your handling code here:
        xoatrang();
    }//GEN-LAST:event_tkmbnMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        txtmabc.setEditable(true);
        txtmabn.setEnabled(true);
       xoatrang();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dieutri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dieutri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dieutri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dieutri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dieutri().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btcapnhat;
    private javax.swing.JButton btluu;
    private javax.swing.JButton btthoat;
    private javax.swing.JButton btxoa;
    private javax.swing.JButton btxuatexcel;
    private javax.swing.JComboBox<String> cbkhoa;
    private javax.swing.JComboBox<String> cbmaphong;
    private com.toedter.calendar.JDateChooser dcndt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbdieutri;
    private javax.swing.JTextField tkmbc;
    private javax.swing.JTextField tkmbn;
    private javax.swing.JTextField txtmabc;
    private javax.swing.JTextField txtmabn;
    // End of variables declaration//GEN-END:variables

    
   
 
}
