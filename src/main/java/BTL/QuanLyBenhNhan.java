/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package BTL;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dqduc
 */
public class QuanLyBenhNhan extends javax.swing.JFrame {
    private void updateTable() {
    Connection con = null;
    Statement stmt = null;
    ResultSet rs = null;

    try {
        // Kết nối tới database
        con = Connect.KetnoiDB();

        // Câu lệnh SQL để lấy dữ liệu từ bảng BenhNhan
        String sql = "SELECT * FROM BenhNhan";
        stmt = con.createStatement();
        rs = stmt.executeQuery(sql);

        // Xóa dữ liệu hiện tại trong bảng
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Xóa tất cả các hàng hiện có

        // Duyệt qua kết quả và thêm vào bảng
        while (rs.next()) {
            String maBenhNhan = rs.getString("MaBenhNhan");
            String hoTen = rs.getString("HoTen");
            String ngaySinh = rs.getString("NgaySinh");
            String gioiTinh = rs.getString("GioiTinh");
            String diaChi = rs.getString("DiaChi");
            String soDienThoai = rs.getString("SoDienThoai");
            String cmnd = rs.getString("CMND");
            String ngayDangKy = rs.getString("NgayDangKy");

            // Thêm dữ liệu vào bảng
            model.addRow(new Object[]{maBenhNhan, hoTen, ngaySinh, gioiTinh, diaChi, soDienThoai, cmnd, ngayDangKy});
        }

    } catch (ClassNotFoundException | SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
    } finally {
        // Đóng kết nối và các đối tượng
        try {
            if (rs != null) {
                rs.close();
            }
            if (stmt != null) {
                stmt.close();
            }
            Connect.DongDB(con);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}


    /**
     * Creates new form QuanLyBenhNhan
     */
    public QuanLyBenhNhan() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lý Bệnh Nhân");

        jLabel1.setText("Mã bệnh nhân:");

        jLabel2.setText("Họ và tên:");

        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("Nhập Thông Tin Bệnh Nhân");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Ngày sinh: ");

        jLabel5.setText("Giới tính:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn giới tính", "Nam", "Nữ", "Khác" }));

        jLabel6.setText("Địa chỉ: ");

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel7.setText("Số điện thoại:");

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel8.setText("CCCD:");

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel9.setText("Ngày đăng ký:");

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField4)
                    .addComponent(jTextField2)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField6)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField5)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(40, 40, 40)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(15, 15, 15)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel6))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Bệnh Nhân", "Họ Và Tên", "Ngày Sinh", "Giới Tính", "Địa Chỉ", "Số Điện Thoại", "CCCD", "Ngày Đăng Ký"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Lưu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sửa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Xóa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Thoát");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Tìm kiếm");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
String maBenhNhan = jTextField4.getText().trim();
if (maBenhNhan.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Phải nhập mã bệnh nhân!");
    return;
}

// Kết nối tới cơ sở dữ liệu để kiểm tra mã bệnh nhân
Connection con = null;
try {
    con = Connect.KetnoiDB();

    // Truy vấn kiểm tra mã bệnh nhân đã tồn tại
    String checkSql = "SELECT * FROM BenhNhan WHERE MaBenhNhan = ?";
    PreparedStatement checkStmt = con.prepareStatement(checkSql);
    checkStmt.setString(1, maBenhNhan);
    ResultSet rs = checkStmt.executeQuery();

    // Nếu mã bệnh nhân đã tồn tại, hiển thị thông báo và dừng thực thi
    if (rs.next()) {
        JOptionPane.showMessageDialog(this, "Mã bệnh nhân đã tồn tại, vui lòng nhập mã khác!");
        return;
    }

    // Nếu mã bệnh nhân chưa tồn tại, tiếp tục thực hiện các bước kiểm tra và lưu
    String hoTen = jTextField2.getText().trim();
    if (hoTen.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Phải nhập tên bệnh nhân!");
        return;
    }

    String ngaySinh = jTextField6.getText().trim();
    if (ngaySinh.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Phải nhập ngày sinh!");
        return;
    }

    String gioiTinh = jComboBox1.getSelectedItem().toString();
    if (gioiTinh.equals("Chọn giới tính")) {
        gioiTinh = "";
    }
    if (gioiTinh.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Phải nhập giới tính!");
        return;
    }

    String diaChi = jTextField5.getText().trim();
    if (diaChi.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Phải nhập địa chỉ!");
        return;
    }

    String soDienThoai = jTextField7.getText().trim();
    if (soDienThoai.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Phải nhập số điện thoại!");
        return;
    }
    // Kiểm tra định dạng số điện thoại
    String regex_dt = "(84|0[3|5|7|8|9])+([0-9]{8})";
    Pattern pattern = Pattern.compile(regex_dt);
    Matcher matcher = pattern.matcher(soDienThoai);
    if (!matcher.matches()) {
        JOptionPane.showMessageDialog(this, "Nhập sai số điện thoại!");
        return;
    }

    String cmnd = jTextField3.getText().trim();
    if (cmnd.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Phải nhập số CMND!");
        return;
    }

    String ngayDangKy = jTextField8.getText().trim();
    if (ngayDangKy.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Phải nhập ngày đăng ký!");
        return;
    }

    // Câu lệnh SQL để insert dữ liệu vào bảng BenhNhan
    String sql = "INSERT INTO BenhNhan (MaBenhNhan, HoTen, NgaySinh, GioiTinh, DiaChi, SoDienThoai, CMND, NgayDangKy) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

    PreparedStatement pstmt = con.prepareStatement(sql);
    pstmt.setString(1, maBenhNhan);
    pstmt.setString(2, hoTen);
    pstmt.setString(3, ngaySinh);
    pstmt.setString(4, gioiTinh);
    pstmt.setString(5, diaChi);
    pstmt.setString(6, soDienThoai);
    pstmt.setString(7, cmnd);
    pstmt.setString(8, ngayDangKy);

    // Thực thi câu lệnh SQL
    int result = pstmt.executeUpdate();
    if (result > 0) {
        JOptionPane.showMessageDialog(this, "Lưu thành công!");
        updateTable(); // Cập nhật bảng sau khi lưu thành công
    } else {
        JOptionPane.showMessageDialog(this, "Lưu không thành công!");
    }

} catch (ClassNotFoundException | SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
} finally {
    // Đóng kết nối sau khi thực thi xong
    Connect.DongDB(con);
}


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try{
            //lấy dữ liệu từ compoment đưa vài biến
            String maBenhNhan = jTextField4.getText().trim();
            String hoTen = jTextField2.getText().trim();
            String cmnd = jTextField3.getText().trim();
            Connection con = Connect.KetnoiDB();
            String sql = "Select * From BenhNhan Where MaBenhNhan like'%"+maBenhNhan+"%' and HoTen like N'%"+hoTen+"%' and CMND like N'%"+cmnd+"%'";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            String[] tieude = {"Mã Bệnh Nhân", "Họ Và Tên","Ngày Sinh","Giới Tính","Địa chỉ","Số Điện thoại","CCCD","Ngày Đăng Ký"};
            DefaultTableModel tb = new DefaultTableModel(tieude,0);
            while(rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("Mã Bệnh Nhân"));
                v.add(rs.getString("Họ Và Tên"));
                v.add(rs.getString("Ngày Sinh"));
                v.add(rs.getString("Giới Tính"));
                v.add(rs.getString("Địa chỉ"));
                v.add(rs.getString("Số Điện thoại"));
                v.add(rs.getString("CCCD"));
                v.add(rs.getString("Ngày Đăng Ký"));
                tb.addRow(v);
            }
            jTable1.setModel(tb);
            con.close();
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         String maBenhNhan = jTextField4.getText();
    String hoTen = jTextField2.getText();
    String ngaySinh = jTextField6.getText();
    String gioiTinh = jComboBox1.getSelectedItem().toString();
    String diaChi = jTextField5.getText();
    String soDienThoai = jTextField7.getText();
    String cmnd = jTextField3.getText();
    String ngayDangKy = jTextField8.getText();

    // Kiểm tra nếu thông tin nhập vào hợp lệ
    if (maBenhNhan.isEmpty() || hoTen.isEmpty() || ngaySinh.isEmpty() || diaChi.isEmpty() || soDienThoai.isEmpty() || cmnd.isEmpty() || ngayDangKy.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
        return; // Ngưng thực hiện nếu có trường rỗng
    }

    // Kết nối tới database
    Connection con = null;
    try {
        con = Connect.KetnoiDB();

        // Câu lệnh SQL để cập nhật dữ liệu vào bảng BenhNhan
        String sql = "UPDATE BenhNhan SET HoTen = ?, NgaySinh = ?, GioiTinh = ?, DiaChi = ?, SoDienThoai = ?, CMND = ?, NgayDangKy = ? WHERE MaBenhNhan = ?";

        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setString(1, hoTen);
        pstmt.setString(2, ngaySinh); // Đảm bảo định dạng ngày tháng phù hợp
        pstmt.setString(3, gioiTinh);
        pstmt.setString(4, diaChi);
        pstmt.setString(5, soDienThoai);
        pstmt.setString(6, cmnd);
        pstmt.setString(7, ngayDangKy); // Đảm bảo định dạng ngày tháng phù hợp
        pstmt.setString(8, maBenhNhan); // Thêm điều kiện WHERE để xác định MaBenhNhan cần sửa

        // Thực thi câu lệnh SQL
        int result = pstmt.executeUpdate();
        if (result > 0) {
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
            updateTable(); // Cập nhật bảng sau khi sửa thành công
        } else {
            JOptionPane.showMessageDialog(this, "Cập nhật không thành công!");
        }

    } catch (ClassNotFoundException | SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
    } finally {
        // Đóng kết nối sau khi thực thi xong
        Connect.DongDB(con);
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
        // Lấy mã bệnh nhân từ text field
        String maBenhNhan = jTextField4.getText();

        // Kiểm tra xem mã bệnh nhân có trống không
        if (maBenhNhan.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã bệnh nhân cần xoá.");
            return; // Dừng nếu mã bệnh nhân trống
        }

        // Xác nhận xem người dùng có chắc chắn muốn xóa không
        int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xoá bệnh nhân này không?", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        // Nếu người dùng chọn "Yes"
        if (choice == JOptionPane.YES_OPTION) {
            // Kết nối tới database
            Connection con = Connect.KetnoiDB();

            // Câu lệnh SQL để xóa bệnh nhân theo mã bệnh nhân
            String sql = "DELETE FROM BenhNhan WHERE MaBenhNhan = ?";
            
            // Sử dụng PreparedStatement để thực thi câu lệnh xóa
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, maBenhNhan);  // Thiết lập mã bệnh nhân cần xóa
            int result = pstmt.executeUpdate();

            // Kiểm tra kết quả, nếu có ít nhất một dòng bị ảnh hưởng thì xóa thành công
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Xoá thành công!");

                // Làm rỗng các trường thông tin sau khi xóa
                jTextField4.setText("");  // Làm trống mã bệnh nhân
                jTextField2.setText("");  // Làm trống họ tên
                jTextField6.setText("");  // Làm trống ngày sinh
                jTextField5.setText("");  // Làm trống địa chỉ
                jTextField7.setText("");  // Làm trống số điện thoại
                jTextField3.setText("");  // Làm trống CMND
                jTextField8.setText("");  // Làm trống ngày đăng ký
                jComboBox1.setSelectedIndex(0);  // Đặt lại comboBox về giá trị mặc định
                
                updateTable();  // Cập nhật lại bảng sau khi xóa thành công
            } else {
                JOptionPane.showMessageDialog(this, "Xóa không thành công! Mã bệnh nhân không tồn tại.");
            }

            // Đóng kết nối database
            pstmt.close();
            con.close();
        } else {
            JOptionPane.showMessageDialog(this, "Không xoá nữa.");
        }
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyBenhNhan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
